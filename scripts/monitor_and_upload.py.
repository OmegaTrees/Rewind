#!/usr/bin/env python3
import os
import time
import subprocess
import requests
from urllib.parse import urljoin

# qBittorrent credentials
username = os.environ.get('QBITTORRENT_USERNAME', 'admin')
password = os.environ.get('QBITTORRENT_PASSWORD', 'adminadmin')
port = os.environ.get('QBITTORRENT_PORT', '8080')
base_url = f'http://localhost:{port}'

def get_completed_torrents():
    session = requests.Session()
    login_data = {'username': username, 'password': password}
    session.post(urljoin(base_url, '/api/v2/auth/login'), data=login_data)
    response = session.get(urljoin(base_url, '/api/v2/torrents/info'))
    torrents = response.json()
    completed = []
    for torrent in torrents:
        if torrent['progress'] == 1and torrent['state'] == 'pausedUP':
            completed.append(torrent)
    
    return completed

def process_completed_torrent(torrent):
    content_path = torrent['content_path']
    subprocess.run(['/scripts/process_completed.sh', content_path])

def main():
    while True:
        try:
            completed_torrents = get_completed_torrents()
            for torrent in completed_torrents:
                process_completed_torrent(torrent)except Exception as e:
            print(f"Error in monitor script: {e}")
        
        time.sleep(60)  # Check every minute

if __name__ == "__main__":
    time.sleep(10)  # Give some time for qBittorrent to start
    main()
